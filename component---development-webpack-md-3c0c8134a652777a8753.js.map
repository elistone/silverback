{"version":3,"sources":["webpack:///../development/webpack.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"weAMO,IAAMA,EAAe,Q,wMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,WADR,WAGA,0KACA,sBACE,kBAAIC,WAAW,MAAK,0BAAYA,WAAW,MAAvB,6BAApB,kDACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,oBAApB,sMAAwR,0BAAYA,WAAW,MAAvB,uBAAxR,MAEF,iBAAQ,CACN,GAAM,gBADR,gBAGA,sBACE,kBAAIA,WAAW,MAAf,wEAA6F,kBAAIA,WAAW,MAAf,yCAA7F,KACA,kBAAIA,WAAW,MAAf,YAAiC,0BAAYA,WAAW,MAAvB,oBAAjC,gDAGF,oBAAW,CACT,UAAa,gBADf,wiC,+LAuCJJ,EAAWK,gBAAiB","file":"component---development-webpack-md-3c0c8134a652777a8753.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/silverback/silverback/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"webpack\"\n    }}>{`Webpack`}</h1>\n    <p>{`The project is set up to use webpack to bundle drupal libraries, so they can be written in modern javascript and import packages from npm. Setup:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`drush en -y webpack_babel`}</inlineCode>{` (there's webpack_react too if you need react)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn webpack-dev`}</inlineCode>{` - starts the local webpack dev server. This needs to be on all the time during development, so the libraries are built. If you don't want to change anything, but have the libraries working, run `}<inlineCode parentName=\"li\">{`drush webpack:build`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"known-issues\"\n    }}>{`Known issues`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`In case of javascript errors, first try disabling the aggregation at `}<em parentName=\"li\">{`/admin/config/development/performance`}</em>{`.`}</li>\n      <li parentName=\"ul\">{`Only one `}<inlineCode parentName=\"li\">{`yarn webpack-dev`}</inlineCode>{` can be running at any given point in time.`}</li>\n    </ul>\n\n    <style {...{\n      \"className\": \"grvsc-styles\"\n    }}>{`\n  .grvsc-container {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n  }\n  \n  .grvsc-code {\n    display: inline-block;\n    min-width: 100%;\n  }\n  \n  .grvsc-line {\n    display: inline-block;\n    box-sizing: border-box;\n    width: 100%;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-line-highlighted {\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\n  }\n  \n`}</style>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}